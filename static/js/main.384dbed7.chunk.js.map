{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Card.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Header","score","topScore","Card","alt","name","src","img","App","state","characters","clicked","shuffle","arr","i","length","j","Math","floor","random","_ref","newGame","_this","setState","cardClick","event","click","src_components_Wrapper","components_Header","this","map","character","src_components_Card","key","id","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6rDAWeA,SARC,SAAAC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVJ,EAAMK,YCQJC,EAZA,SAAAN,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,uBACAH,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,kPACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,2BAAmBH,EAAMO,MAAzB,eAA4CP,EAAMQ,YCI/CC,SAVF,SAAAT,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKO,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,UC0DlCC,oNAzDbC,MAAQ,CACNC,aACAT,MAAO,EACPC,SAAU,EACVS,QAAS,MAGXC,QAAU,SAACC,GACT,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEpB,CAACP,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkCM,EAAA,GAE9BP,EAAIG,GAF0BI,EAAA,GAIzC,OAAOP,KAGTQ,QAAU,WACRC,EAAKC,SAAS,CAACtB,MAAO,IACtBqB,EAAKV,QAAQU,EAAKb,MAAMC,eAG1Bc,UAAY,SAACC,GACPA,EAAMC,MAMLJ,EAAKb,MAAMR,MAAQqB,EAAKb,MAAMP,UAC/BoB,EAAKC,SAAS,CAACrB,SAAUoB,EAAKb,MAAMR,SANtCwB,EAAMC,OAAQ,EACdJ,EAAKC,SAAS,CAACtB,MAAOqB,EAAKb,MAAMR,MAAQ,IACzCqB,EAAKC,SAAS,CAACb,WAAYY,EAAKV,QAAQU,EAAKb,MAAMC,wFAarD,OACEf,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAD,CACE3B,MAAO4B,KAAKpB,MAAMR,MAClBC,SAAU2B,KAAKpB,MAAMP,WAEtB2B,KAAKpB,MAAMC,WAAWoB,IAAI,SAAAC,GAAS,OAClCpC,EAAAC,EAAAC,cAACmC,EAAD,CACEzB,IAAKwB,EAAUxB,IACfF,KAAM0B,EAAU1B,KAChB4B,IAAKF,EAAUG,eAhDTC,IAAMC,YCHxBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.384dbed7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => {\r\n    return(\r\n        <div className=\"container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\nconst Header = props => {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4\">Firefly Clicky Game</h1>\r\n            <h2>You Can't Take the Sky From Me...</h2>\r\n            <p className=\"lead\">Welcome to the Firefly Clicky Game! The object of the game is to click the portrait of each character once. The trick is that every time you click a portrait, theyâ€™re all randomized. Memory is key if you want a high score. Good luck!</p>\r\n            <hr className=\"my-4\" />\r\n            <p>Current Score: {props.score} Top Score: {props.topScore}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <img alt={props.name} src={props.img} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\nimport characters from \"./characters\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from './components/Header';\nimport Card from \"./components/Card\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    characters,\n    score: 0,\n    topScore: 0,\n    clicked: []\n  }\n\n  shuffle = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  newGame = () => {\n    this.setState({score: 0});\n    this.shuffle(this.state.characters);\n  }\n\n  cardClick = (event) => {\n    if(!event.click){\n      event.click = false;\n      this.setState({score: this.state.score + 1});\n      this.setState({characters: this.shuffle(this.state.characters)});\n    }\n    else{\n      if(this.state.score > this.state.topScore){\n        this.setState({topScore: this.state.score});\n      }\n      // newGame();\n    }\n  }\n\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Header\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        {this.state.characters.map(character => (\n          <Card\n            img={character.img}\n            name={character.name}\n            key={character.id}\n            // onClick={this.shuffle(this.state.characters)}\n            // onClick={this.cardClick()}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}